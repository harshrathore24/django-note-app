pipeline {
    agent any
    
    parameters {
        string(name: 'DOCKER_TAG', defaultValue: 'latest.v1', description: 'Docker tag for the image')
    }
    
    stages {
        stage("Clone Code") {
            steps {
                echo "Cloning the code from GitHub"
                git url: "https://github.com/harshrathore24/django-note-app.git", branch: "main"
            }
        }
        
        stage("Build Docker Image") {
            steps {
                echo "Building the Docker image"
                sh "docker build -t harshrathore24/my-note-app:latest ."
            }
        }

        stage("Run Docker Container") {
            steps {
                echo "Stopping and removing any existing container with the same name"
                sh "docker stop test_version || true"
                sh "docker rm test_version || true"

                echo "Running the container"
                sh "docker run -d -p 8000:8000 --name test_version harshrathore24/my-note-app:latest"
            }
        }

        stage("Tag and Push to Docker Hub") {
            steps {
                script {
                    def newTag = params.DOCKER_TAG
                    echo "Tagging the image with the new version: ${newTag}"
                    sh "docker tag harshrathore24/my-note-app:latest harshrathore24/my-note-app:${newTag}"

                    echo "Pushing the image to Docker Hub"
                    withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPass', usernameVariable: 'dockerHubUser')]) {
                        sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
                        sh "docker push harshrathore24/my-note-app:${newTag}"
                    }
                }
            }
        }
    }
}
