pipeline {
    agent any
    
    environment {
        DOCKER_TAG = "my-note-app:${env.BUILD_TIMESTAMP}"
    }
    
    stages {
        stage("Clone Code") {
            steps {
                echo "Cloning the code"
                git url: "https://github.com/harshrathore24/django-note-app.git", branch: "main"
            }
        }
   
        stage("Build and Run") {
            steps {
                script {
                    echo "Generating unique version tag"
                    env.BUILD_TIMESTAMP = sh(script: 'date +"%Y%m%d%H%M%S"', returnStdout: true).trim()
                    env.DOCKER_TAG = "my-note-app:${env.BUILD_TIMESTAMP}"
                }

                echo "Building the image with tag ${env.DOCKER_TAG}"
                sh "docker build -t ${env.DOCKER_TAG} ."
                
                echo "Stopping and removing any existing container with the same name"
                sh "docker stop my-note || true"
                sh "docker rm my-note || true"
                
                echo "Running the container"
                sh "docker run -d -p 8000:8000 --name my-note ${env.DOCKER_TAG}"
            }
        }

        stage("Push Image to Docker Hub") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerHub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    echo "Logging in to Docker Hub"
                    sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    
                    echo "Tagging the image with ${env.DOCKER_TAG}"
                    sh "docker tag ${env.DOCKER_TAG} $DOCKER_USERNAME/${env.DOCKER_TAG}"
                    
                    echo "Pushing the image to Docker Hub"
                    sh "docker push $DOCKER_USERNAME/${env.DOCKER_TAG}"
                }
            }
        }
    }
}
